# This workflow will build winpe then publish to GitHub Release when a release is created
#
name: Build
on:
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  # If a default parameter is not set, the default value of the input is false for a boolean, 0 for a number, and "" for a string.
  workflow_dispatch:
    inputs:
      branding:
        description: "Include drivers"
        required: true
        default: "all"
        type: choice
        options:
          - none
          - all
          - hp
          - dell
          - lenovo
          - vmware
      MDT:
        description: "Include MDT"
        required: true
        type: boolean

jobs:
  build:
    env:
      INPUT_BRANDING: ${{ github.event.inputs.branding }}
      INPUT_MDT: ${{ github.event.inputs.MDT }}
    runs-on: windows-latest
    steps:
      - name: Set if github.event.inputs.branding is empty
        shell: pwsh
        if: "${{ github.event.inputs.branding == null }}"
        run: |
          echo "INPUT_BRANDING=all" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

      - name: Set env if github.event.inputs.mdt is empty
        shell: pwsh
        if: ${{ github.event.inputs.MDT == null }}
        run: |
          echo "INPUT_MDT=0" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

      - name: Print the input values to STDOUT
        shell: pwsh
        run: |
          "The tags are:`n`tMDT: ${env:INPUT_MDT}`n`tBRANDING: ${env:INPUT_BRANDING} `n`tWorkspace: ${env:GITHUB_WORKSPACE}" | write-output

      - name: Install Chocolatey
        shell: pwsh
        run: |
          if(test-path -path "$env:ALLUSERSPROFILE\chocolatey\choco.exe"){Write-Output "Choco is already installed"} else {
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
            Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          }

      - name: Install ADK
        shell: pwsh
        run: choco install windows-adk-all -y

      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Build the WinPE image
        shell: pwsh
        run: .\WinPEImage.ps1 -branding $env:INPUT_BRANDING -mdt $($env:INPUT_MDT -eq '1') -arch "amd64" -workingDirectory $env:GITHUB_WORKSPACE

      - name: Generate sha256
        shell: pwsh
        run: |
          "$((Get-FileHash -Path '.\WinPE_amd64.iso' -Algorithm SHA256).Hash)    WinPE_amd64.iso" | Out-File -FilePath '.\sha256.txt'

      - name: upload artifact
        if: ${{!startsWith(github.ref,'refs/tags/')}}
        uses: actions/upload-artifact@v4.3.1
        with:
          name: WinPE_amd64
          path: |
            .\WinPE_amd64.iso
            .\sha256.txt
          if-no-files-found: error

      - name: Release
        if: startsWith(github.ref,'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            WinPE_amd64.iso
            sha256.txt
